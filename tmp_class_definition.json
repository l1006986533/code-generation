[
    {
        "class_name": "Buyer",
        "class_description": "Used to store information about each buyer.",
        "properties": [
            {
                "param_name": "id",
                "param_type": "str"
            },
            {
                "param_name": "username",
                "param_type": "str"
            },
            {
                "param_name": "password",
                "param_type": "str"
            },
            {
                "param_name": "email",
                "param_type": "str"
            },
            {
                "param_name": "registration_date",
                "param_type": "str"
            },
            {
                "param_name": "phone_number",
                "param_type": "str"
            },
            {
                "param_name": "address",
                "param_type": "str"
            },
            {
                "param_name": "payment_method",
                "param_type": "str"
            }
        ],
        "methods": [],
        "class_type": "model"
    },
    {
        "class_name": "Seller",
        "class_description": "Used to store information about each seller.",
        "properties": [
            {
                "param_name": "id",
                "param_type": "str"
            },
            {
                "param_name": "store_name",
                "param_type": "str"
            },
            {
                "param_name": "email",
                "param_type": "str"
            },
            {
                "param_name": "registration_date",
                "param_type": "str"
            },
            {
                "param_name": "phone_number",
                "param_type": "str"
            },
            {
                "param_name": "store_description",
                "param_type": "str"
            },
            {
                "param_name": "bank_account",
                "param_type": "str"
            }
        ],
        "methods": [],
        "class_type": "model"
    },
    {
        "class_name": "Administrator",
        "class_description": "Used to store information about each administrator.",
        "properties": [
            {
                "param_name": "id",
                "param_type": "str"
            },
            {
                "param_name": "username",
                "param_type": "str"
            },
            {
                "param_name": "password",
                "param_type": "str"
            },
            {
                "param_name": "email",
                "param_type": "str"
            },
            {
                "param_name": "phone_number",
                "param_type": "str"
            },
            {
                "param_name": "role",
                "param_type": "str"
            }
        ],
        "methods": [],
        "class_type": "model"
    },
    {
        "class_name": "Product",
        "class_description": "Used to store information about each product listed on the platform.",
        "properties": [
            {
                "param_name": "id",
                "param_type": "str"
            },
            {
                "param_name": "name",
                "param_type": "str"
            },
            {
                "param_name": "description",
                "param_type": "str"
            },
            {
                "param_name": "price",
                "param_type": "str"
            },
            {
                "param_name": "stock",
                "param_type": "str"
            },
            {
                "param_name": "seller_id",
                "param_type": "str"
            },
            {
                "param_name": "images",
                "param_type": "str"
            },
            {
                "param_name": "category",
                "param_type": "str"
            },
            {
                "param_name": "tags",
                "param_type": "str"
            }
        ],
        "methods": [],
        "class_type": "model"
    },
    {
        "class_name": "Order",
        "class_description": "Used to store information about each order placed by a buyer.",
        "properties": [
            {
                "param_name": "id",
                "param_type": "str"
            },
            {
                "param_name": "buyer_id",
                "param_type": "str"
            },
            {
                "param_name": "seller_id",
                "param_type": "str"
            },
            {
                "param_name": "order_date",
                "param_type": "str"
            },
            {
                "param_name": "status",
                "param_type": "str"
            },
            {
                "param_name": "total_amount",
                "param_type": "str"
            },
            {
                "param_name": "shipping_address",
                "param_type": "str"
            },
            {
                "param_name": "payment_status",
                "param_type": "str"
            }
        ],
        "methods": [],
        "class_type": "model"
    },
    {
        "class_name": "ProductService",
        "class_description": "Class for managing product listing and sorting features.",
        "properties": [],
        "methods": [
            {
                "method_name": "browseProducts",
                "method_inputs": [
                    {
                        "param_name": "buyerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "sort",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "ResponseEntity<ProductResponse>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "ProductResponse",
        "class_description": "Class that provides responses for product browsing operations.",
        "properties": [
            {
                "param_name": "status",
                "param_type": "String"
            },
            {
                "param_name": "message",
                "param_type": "String"
            }
        ],
        "methods": [],
        "class_type": "dto"
    },
    {
        "class_name": "OrderService",
        "class_description": "Service class that handles business logic for placing orders.",
        "properties": [],
        "methods": [
            {
                "method_name": "placeOrder",
                "method_inputs": [
                    {
                        "param_name": "buyerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "productId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "quantity",
                        "param_type": "Integer"
                    }
                ],
                "method_return_type": "Map<String, String>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "OrderController",
        "class_description": "Controller class to handle HTTP requests related to orders.",
        "properties": [],
        "methods": [
            {
                "method_name": "placeOrder",
                "method_inputs": [
                    {
                        "param_name": "buyerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "productId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "quantity",
                        "param_type": "Integer"
                    }
                ],
                "method_return_type": "ResponseEntity<Map<String, String>>"
            }
        ],
        "class_type": "controller"
    },
    {
        "class_name": "PaymentService",
        "class_description": "Handles business logic for payment processing in relation to buyers.",
        "properties": [],
        "methods": [
            {
                "method_name": "processPayment",
                "method_inputs": [
                    {
                        "param_name": "orderId",
                        "param_type": "Integer"
                    },
                    {
                        "param_name": "paymentMethod",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "Map<String, String>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "PaymentController",
        "class_description": "Responsible for handling HTTP requests related to payment operations for buyers.",
        "properties": [],
        "methods": [
            {
                "method_name": "makePayment",
                "method_inputs": [
                    {
                        "param_name": "orderId",
                        "param_type": "Integer"
                    },
                    {
                        "param_name": "paymentMethod",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "ResponseEntity<Map<String, String>>"
            }
        ],
        "class_type": "controller"
    },
    {
        "class_name": "InventoryService",
        "class_description": "Service layer for managing inventory of products for sellers.",
        "properties": [],
        "methods": [
            {
                "method_name": "updateInventory",
                "method_inputs": [
                    {
                        "param_name": "seller_id",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "product_id",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "new_stock",
                        "param_type": "Integer"
                    }
                ],
                "method_return_type": "Map<String, String>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "InventoryController",
        "class_description": "Controller for managing inventory updates from sellers.",
        "properties": [],
        "methods": [
            {
                "method_name": "updateInventory",
                "method_inputs": [
                    {
                        "param_name": "request",
                        "param_type": "Map<String, Object>"
                    }
                ],
                "method_return_type": "ResponseEntity<Map<String, String>>"
            }
        ],
        "class_type": "controller"
    },
    {
        "class_name": "SellerService",
        "class_description": "Handles business logic related to seller interactions with buyers.",
        "properties": [],
        "methods": [
            {
                "method_name": "sendMessageToBuyer",
                "method_inputs": [
                    {
                        "param_name": "sellerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "buyerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "message",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "Map<String, String>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "SellerController",
        "class_description": "Provides REST endpoints for seller related operations, including interacting with buyers.",
        "properties": [],
        "methods": [
            {
                "method_name": "sendBuyerMessage",
                "method_inputs": [
                    {
                        "param_name": "sellerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "buyerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "message",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "ResponseEntity<Map<String, String>>"
            }
        ],
        "class_type": "controller"
    },
    {
        "class_name": "AdministratorService",
        "class_description": "Handles the business logic related to the Administrator functionalities, including security policies.",
        "properties": [],
        "methods": [
            {
                "method_name": "executeAction",
                "method_inputs": [
                    {
                        "param_name": "adminId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "action",
                        "param_type": "String"
                    },
                    {
                        "param_name": "policyData",
                        "param_type": "Map<String, String>"
                    }
                ],
                "method_return_type": "Map<String, String>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "AdministratorController",
        "class_description": "Defines the endpoints for the Administrator functionalities, allowing HTTP requests to interact with the service.",
        "properties": [],
        "methods": [
            {
                "method_name": "updatePolicy",
                "method_inputs": [
                    {
                        "param_name": "adminId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "action",
                        "param_type": "String"
                    },
                    {
                        "param_name": "policyData",
                        "param_type": "Map<String, String>"
                    }
                ],
                "method_return_type": "ResponseEntity<Map<String, String>>"
            },
            {
                "method_name": "monitorLogs",
                "method_inputs": [
                    {
                        "param_name": "adminId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "logType",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "ResponseEntity<Map<String, String>>"
            }
        ],
        "class_type": "controller"
    },
    {
        "class_name": "AdministratorRepository",
        "class_description": "Handles data access for administrator-related information, such as monitoring logs and policies.",
        "properties": [],
        "methods": [
            {
                "method_name": "findById",
                "method_inputs": [
                    {
                        "param_name": "adminId",
                        "param_type": "Long"
                    }
                ],
                "method_return_type": "Optional<Administrator>"
            },
            {
                "method_name": "findLogsByType",
                "method_inputs": [
                    {
                        "param_name": "logType",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "List<LogEntry>"
            }
        ],
        "class_type": "repository"
    },
    {
        "class_name": "PolicyService",
        "class_description": "Service layer for managing policies within the platform.",
        "properties": [],
        "methods": [
            {
                "method_name": "implementPolicy",
                "method_inputs": [
                    {
                        "param_name": "admin_id",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "policy_name",
                        "param_type": "String"
                    },
                    {
                        "param_name": "policy_content",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "HashMap<String, String>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "Policy",
        "class_description": "Data structure for policy attributes and results.",
        "properties": [
            {
                "param_name": "policy_name",
                "param_type": "String"
            },
            {
                "param_name": "policy_content",
                "param_type": "String"
            },
            {
                "param_name": "is_active",
                "param_type": "Boolean"
            }
        ],
        "methods": [],
        "class_type": "model"
    },
    {
        "class_name": "Dispute",
        "class_description": "Used to store information about disputes within the platform.",
        "properties": [
            {
                "param_name": "disputeId",
                "param_type": "Long"
            },
            {
                "param_name": "buyerId",
                "param_type": "Long"
            },
            {
                "param_name": "sellerId",
                "param_type": "Long"
            },
            {
                "param_name": "status",
                "param_type": "String"
            },
            {
                "param_name": "description",
                "param_type": "String"
            },
            {
                "param_name": "createdDate",
                "param_type": "LocalDateTime"
            }
        ],
        "methods": [
            {
                "method_name": "createDispute",
                "method_inputs": [
                    {
                        "param_name": "disputeId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "buyerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "sellerId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "status",
                        "param_type": "String"
                    },
                    {
                        "param_name": "description",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "Dispute"
            },
            {
                "method_name": "updateDisputeStatus",
                "method_inputs": [
                    {
                        "param_name": "disputeId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "status",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "Dispute"
            },
            {
                "method_name": "getDisputeDetails",
                "method_inputs": [
                    {
                        "param_name": "disputeId",
                        "param_type": "Long"
                    }
                ],
                "method_return_type": "Dispute"
            }
        ],
        "class_type": "model"
    },
    {
        "class_name": "DisputeResolutionService",
        "class_description": "Contains business logic for resolving disputes between buyers and sellers.",
        "properties": [],
        "methods": [
            {
                "method_name": "resolveDispute",
                "method_inputs": [
                    {
                        "param_name": "adminId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "disputeId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "resolution",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "Map<String, String>"
            }
        ],
        "class_type": "service"
    },
    {
        "class_name": "DisputeResolutionController",
        "class_description": "Handles HTTP requests related to dispute resolution by administrators.",
        "properties": [],
        "methods": [
            {
                "method_name": "resolveDispute",
                "method_inputs": [
                    {
                        "param_name": "adminId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "disputeId",
                        "param_type": "Long"
                    },
                    {
                        "param_name": "resolution",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "ResponseEntity<Map<String, String>>"
            }
        ],
        "class_type": "controller"
    },
    {
        "class_name": "DisputeRepository",
        "class_description": "Handles data access for disputes.",
        "properties": [],
        "methods": [
            {
                "method_name": "findDisputeById",
                "method_inputs": [
                    {
                        "param_name": "disputeId",
                        "param_type": "Long"
                    }
                ],
                "method_return_type": "Optional<Dispute>"
            },
            {
                "method_name": "findDisputesByStatus",
                "method_inputs": [
                    {
                        "param_name": "status",
                        "param_type": "String"
                    }
                ],
                "method_return_type": "List<Dispute>"
            }
        ],
        "class_type": "repository"
    }
]